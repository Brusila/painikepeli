{"version":3,"sources":["components/PlayButton.js","components/PointBalance.js","components/StartOverButton.js","components/WinBanner.js","components/NextWinBanner.js","components/Welcome.js","components/Scoreboard.js","pages/GamePage.js","App.js","index.js"],"names":["PlayButton","props","playClicked","type","className","onClick","PointBalance","points","StartOverButton","startOver","WinBanner","pointsWon","NextWinBanner","clicksToWin","Welcome","state","name","errorMessage","submitEvent","bind","handleChange","event","this","setState","target","value","handleSubmit","length","preventDefault","onSubmit","onChange","React","Component","ScoreBoard","listitems","highscores","undefined","map","player","key","toString","GamePage","playerFound","play","fetch","method","credentials","then","res","json","highscoreArray","counter","headers","body","JSON","stringify","totalClicks","button","main","Scoreboard","href","title","rel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff2bdb0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction PlayButton(props) {\r\n  const { playClicked } = props;\r\n  return (\r\n    <button type=\"button\" className=\"playButton\" onClick={playClicked}>PLAY</button>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n","import React from 'react';\r\n\r\nfunction PointBalance(props) {\r\n  const { points } = props;\r\n  return (\r\n    <div className=\"scoreDiv\">\r\n      <h2 className=\"scoreDefinition\">Score</h2>\r\n      <b className=\"score\">{points}</b>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PointBalance;\r\n","import React from 'react';\r\n\r\nfunction StartOverButton(props) {\r\n  const { startOver } = props;\r\n  return (\r\n    <div className=\"startOverDiv\">\r\n      <button type=\"button\" className=\"startOverButton\" onClick={startOver}>START OVER</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartOverButton;\r\n","import React from 'react';\r\n\r\nfunction WinBanner(props) {\r\n  const { pointsWon } = props;\r\n  if (pointsWon === 0) {\r\n    return (\r\n      <div className=\"winBannerDiv\" />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"winBannerDiv\">\r\n      <h2 className=\"winBanner\">\r\n        +\r\n        {pointsWon}\r\n        {' '}\r\n        points!\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WinBanner;\r\n","import React from 'react';\r\n\r\nfunction NextWinBanner(props) {\r\n  const { points, clicksToWin } = props;\r\n  if (points === 0) {\r\n    return (null);\r\n  }\r\n  return (\r\n    <div className=\"nextWinDiv\">\r\n      <h2 className=\"nextWinDefinition\">Clicks to next win:</h2>\r\n      <h2 className=\"nextWinPoints\">{clicksToWin}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NextWinBanner;\r\n","import React from 'react';\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '', errorMessage: '' };\r\n    this.submitEvent = this.submitEvent.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ name: event.target.value, errorMessage: '' });\r\n  }\r\n\r\n  submitEvent(event) {\r\n    const { name } = this.state;\r\n    const { handleSubmit } = this.props;\r\n    if (!name) {\r\n      this.setState({ errorMessage: \"Username can't be empty!\" });\r\n    } else if (name.length > 8) {\r\n      this.setState({ errorMessage: 'Maximux of 8 characters!' });\r\n    } else {\r\n      handleSubmit(name);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { value, errorMessage } = this.state;\r\n    return (\r\n      <div className=\"welcomeDiv\">\r\n        <form className=\"welcomeForm\" onSubmit={this.submitEvent}>\r\n          <span>Enter your name</span>\r\n          <input className=\"welcomeField\" type=\"text\" value={value} onChange={this.handleChange} />\r\n          <span className=\"welcomeErrorText\">\r\n            {errorMessage}\r\n          </span>\r\n          <input className=\"welcomeSubmit\" type=\"submit\" value=\"Let's play!\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\n\r\nfunction ScoreBoard(props) {\r\n  const { highscores } = props;\r\n  let listitems;\r\n  if (highscores === undefined) {\r\n    listitems = null;\r\n  } else {\r\n    listitems = highscores.map((player) => (\r\n      <li key={player.name.toString()}>\r\n        {player.name}\r\n        {' '}\r\n        -\r\n        {' '}\r\n        {player.points}\r\n        {' '}\r\n        points\r\n      </li>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"highscoreDiv\">\r\n      <h2 className=\"highscoreDefinition\">Highscores</h2>\r\n      <ol className=\"highscoreList\">\r\n        {listitems}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport PlayButton from '../components/PlayButton';\r\nimport PointBalance from '../components/PointBalance';\r\nimport StartOverButton from '../components/StartOverButton';\r\nimport WinBanner from '../components/WinBanner';\r\nimport NextWinBanner from '../components/NextWinBanner';\r\nimport Welcome from '../components/Welcome';\r\nimport Scoreboard from '../components/Scoreboard';\r\n\r\nclass GamePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      points: 0,\r\n      clicksToWin: 0,\r\n      pointsWon: 0,\r\n      playerFound: 'false',\r\n      highscores: [],\r\n    };\r\n    this.play = this.play.bind(this);\r\n    this.startOver = this.startOver.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    // Find out if the player already exists and load the page accordingly\r\n    fetch('/game/load', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({\r\n        playerFound: res.playerFound,\r\n        points: res.points,\r\n        clicksToWin: res.clicksToWin,\r\n        highscores: res.highscoreArray,\r\n      }));\r\n  }\r\n\r\n  // Make the server to remove 1 point from the player\r\n  play() {\r\n    const { counter } = this.state;\r\n    fetch('/game/play', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({ totalClicks: counter + 1 }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({\r\n        points: res.points,\r\n        clicksToWin: res.clicksToWin,\r\n        pointsWon: res.pointsWon,\r\n        highscores: res.highscoreArray,\r\n      }));\r\n  }\r\n\r\n  // Make the server to reset the player's score to 20\r\n  startOver() {\r\n    const { counter } = this.state;\r\n    fetch('/game/startOver', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({ totalClicks: counter + 1 }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({\r\n        points: res.points,\r\n        clicksToWin: res.clicksToWin,\r\n        highscores: res.highscoreArray,\r\n      }));\r\n  }\r\n\r\n  // Make server to create a player with the given name\r\n  handleSubmit(name) {\r\n    this.setState({ playerFound: 'true' });\r\n    fetch('/game/start', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({ name }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({\r\n        points: res.points,\r\n        clicksToWin: res.clicksToWin,\r\n        highscores: res.highscoreArray,\r\n      }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      points, playerFound, highscores, pointsWon, clicksToWin,\r\n    } = this.state;\r\n    let button;\r\n    if (points === 0) {\r\n      button = <StartOverButton startOver={this.startOver} />;\r\n    } else {\r\n      button = <PlayButton playClicked={this.play} />;\r\n    }\r\n\r\n    let main;\r\n    // If the player didn't exist, render the form to enter username\r\n    if (playerFound === 'false') {\r\n      main = (\r\n        <main className=\"main\">\r\n          <Welcome handleSubmit={this.handleSubmit} />\r\n        </main>\r\n      );\r\n    // If the player did exist, render the content for playing the game\r\n    } else {\r\n      main = (\r\n        <main className=\"main\">\r\n          <Scoreboard highscores={highscores} />\r\n          <div className=\"playDiv\">\r\n            <WinBanner pointsWon={pointsWon} />\r\n            {button}\r\n            <NextWinBanner clicksToWin={clicksToWin} points={points} />\r\n          </div>\r\n          <PointBalance points={points} />\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <header className=\"header\">\r\n          <h1>Painikepeli</h1>\r\n        </header>\r\n        {main}\r\n        <footer className=\"footer\">\r\n          <p>© Brutukseni</p>\r\n          <a href=\"https://github.com/Brutukseni/painikepeli\" title=\"Visit my profile on GitHub\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePage;\r\n","import React from 'react';\r\nimport Page from './pages/GamePage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Page />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}